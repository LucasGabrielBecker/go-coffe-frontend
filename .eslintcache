[{"C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\utils\\api.ts":"1","C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\pages\\Login\\index.tsx":"2","C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\pages\\SignUp\\index.tsx":"3","C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\routes.tsx":"4","C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\pages\\Main\\index.tsx":"5"},{"size":105,"mtime":1606235985194,"results":"6","hashOfConfig":"7"},{"size":4615,"mtime":1606224578238,"results":"8","hashOfConfig":"7"},{"size":7027,"mtime":1606314192842,"results":"9","hashOfConfig":"7"},{"size":523,"mtime":1606155148414,"results":"10","hashOfConfig":"7"},{"size":2443,"mtime":1606508920372,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wdf0vd",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\utils\\api.ts",[],"C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\pages\\Login\\index.tsx",["23","24","25"],"import React, {useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link as RouterLink, useHistory} from \"react-router-dom\"\r\nimport {api} from \"../../utils/api\"\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright Â© '} Go - Coffe - \r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://picsum.photos/800/600)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#8a540a',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n\r\n    backgroundColor:\"#8a540a\",\r\n    '&:hover': {\r\n      backgroundColor: \"#ba6f07\",\r\n   },\r\n\r\n  },\r\n}));\r\n\r\nexport default function SignInSide() {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleLogin = (e : any)=>{\r\n    e.preventDefault()\r\n\r\n    const data = {\r\n      email,\r\n      password\r\n    }\r\n\r\n    api.post('/auth/login', data).then(res => {\r\n      console.log(res.data)\r\n      localStorage.setItem('token', JSON.stringify(res.data.token))\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Login\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={email}\r\n              onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={password}\r\n              onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleLogin}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/signup\" component={RouterLink}>\r\n                    {\"Don't you have an account? Sign up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\pages\\SignUp\\index.tsx",[],"C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\routes.tsx",["26"],"C:\\Users\\admin.lucas\\Documents\\go-coffe-frontend\\src\\pages\\Main\\index.tsx",["27","28","29","30"],{"ruleId":"31","severity":1,"message":"32","line":2,"column":8,"nodeType":"33","messageId":"34","endLine":2,"endColumn":14},{"ruleId":"31","severity":1,"message":"35","line":12,"column":8,"nodeType":"33","messageId":"34","endLine":12,"endColumn":24},{"ruleId":"31","severity":1,"message":"36","line":15,"column":29,"nodeType":"33","messageId":"34","endLine":15,"endColumn":39},{"ruleId":"31","severity":1,"message":"37","line":9,"column":8,"nodeType":"33","messageId":"34","endLine":9,"endColumn":16},{"ruleId":"31","severity":1,"message":"38","line":2,"column":32,"nodeType":"33","messageId":"34","endLine":2,"endColumn":39},{"ruleId":"31","severity":1,"message":"39","line":2,"column":49,"nodeType":"33","messageId":"34","endLine":2,"endColumn":60},{"ruleId":"31","severity":1,"message":"40","line":42,"column":14,"nodeType":"33","messageId":"34","endLine":42,"endColumn":28},{"ruleId":"41","severity":1,"message":"42","line":69,"column":9,"nodeType":"43","endLine":69,"endColumn":50},"@typescript-eslint/no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'LockOutlinedIcon' is defined but never used.","'useHistory' is defined but never used.","'MainPage' is defined but never used.","'Feature' is defined but never used.","'ZoomControl' is defined but never used.","'handleMapClick' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute"]